apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: myip
    name: myip
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: myip:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/varesa/myip
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: python3:latest
          namespace: openshift
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: WRgLhpJ7G_NxgOmvp-Ob
      type: GitHub
    - generic:
        secret: GVF9odNHZCa_bCXEZyB1
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: myip
    name: myip
  spec:
    replicas: 1
    selector:
      app: myip
      deploymentconfig: myip
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: myip
          deploymentconfig: myip
      spec:
        containers:
        - image: 172.30.150.112:5000/misc/myip@sha256:edc00902b43ce6be27ce44817f8e0be27e99c7a64767d2732041e4ed033de9f6
          imagePullPolicy: Always
          name: myip
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - myip
        from:
          kind: ImageStreamTag
          name: myip:latest
          namespace: misc
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: myip
    name: myip
  spec:
    ports:
    - port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      app: myip
      deploymentconfig: myip
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata: {}
